
# Урок: Пространство имен
# применить на практике начальные знания о пространстве имён и оператор global.
# Закрепить навыки из предыдущих модулей.
# Задача "Счётчик вызовов":
# Порой необходимо отслеживать, сколько раз вызывалась та или иная функция.
# К сожалению, в Python не предусмотрен подсчёт вызовов автоматически.
# Давайте реализуем данную фишку самостоятельно!
#
# Вам необходимо написать 3 функции:
# Функция count_calls подсчитывающая вызовы остальных функций.
# Функция string_info принимает аргумент - строку и возвращает кортеж из:
# длины этой строки, строку в верхнем регистре, строку в нижнем регистре.
# Функция is_contains принимает два аргумента: строку и список, и возвращает True,
# если строка находится в этом списке, False - если отсутствует.
# Регистром строки при проверке пренебречь: UrbaN ~ URBAN.
#
# Пункты задачи:
# Создать переменную calls = 0 вне функций.
# Создать функцию count_calls и изменять в ней значение переменной calls. Эта функция должна вызываться в остальных двух функциях.
# Создать функцию string_info с параметром string и реализовать логику работы по описанию.
# Создать функцию is_contains с двумя параметрами string и list_to_search, реализовать логику работы по описанию.
# Вызвать соответствующие функции string_info и is_contains произвольное кол-во раз с произвольными данными.
# Вывести значение переменной calls на экран(в консоль).
#
# Примечания:
# Для использования глобальной переменной внутри функции используйте оператор global.
# Для функции is_contains лучше привести и искомую строку и все строки в списке в один регистр.

calls = 0

def count_calls ():
    global calls
    calls += 1

def string_info (string):
    global calls
    calls += 1
    str_down = string.lower()
    str_up = string.upper()
    str_length = len(string)
    return str_length, str_up, str_down

def is_contains (string, list_to_search):
    global calls
    calls += 1
    for i in list_to_search:
        if string.upper() == i.upper():
            return True
    return False

print(string_info("Абракадабра"))
print(string_info("Хренотень"))
print(string_info("Абракадабра"))
print(string_info("Хренотень"))
print(string_info("Абракадабра"))
print(string_info("Хренотень"))
print(is_contains('Бамбармия', ['бер', 'мур', 'Дор']))  # No matches
print(is_contains('Кергуду', ['рап', 'ппвпп', 'кергУДу']))  # yes
print(is_contains('Кергуду', ['рап', 'ппвпп', 'кергУДу']))  # yes

print(calls)

